
import java.io.File;
import java.io.IOException;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author asus
 */
public class tantangan extends javax.swing.JFrame {
    private File projectConf;
    private File testJava;
    private File template;
    private File root;
    public tantangan() {
        initComponents();
        root();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("jButton1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("jButton2");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 119, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(93, 93, 93))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(117, 117, 117)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap(160, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        pindahFile();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        hapusRoot();
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(tantangan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(tantangan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(tantangan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(tantangan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new tantangan().setVisible(true);
            }
        });
    }

    private void root() {
       try {
            // Membuat folder Root
            root = new File("src/Root");
            root.mkdirs(); // Gunakan mkdirs untuk memastikan semua parent folders dibuat

            // Membuat file di dalam Root
            projectConf = new File(root, "project.conf");
            File manifestMf = new File(root, "manifest.mf");
            if (projectConf.createNewFile()) {
                System.out.println("File project.conf berhasil dibuat.");
            } else {
                System.out.println("File project.conf sudah ada.");
            }
            if (manifestMf.createNewFile()) {
                System.out.println("File manifest.mf berhasil dibuat.");
            } else {
                System.out.println("File manifest.mf sudah ada.");
            }

            // Membuat folder classes
            File classes = new File(root, "classes");
            classes.mkdirs();

            // Membuat file di dalam folder classes
            testJava = new File(classes, "Test.java");
            File testImplJava = new File(classes, "TestImpl.java");
            if (testJava.createNewFile()) {
                System.out.println("File Test.java berhasil dibuat.");
            } else {
                System.out.println("File Test.java sudah ada.");
            }
            if (testImplJava.createNewFile()) {
                System.out.println("File TestImpl.java berhasil dibuat.");
            } else {
                System.out.println("File TestImpl.java sudah ada.");
            }

            // Membuat folder template
            template = new File(root, "template");
            template.mkdirs();

            // Membuat file di dalam folder template
            File enterTxt = new File(template, "enter.txt");
            File exitTxt = new File(template, "exit.txt");
            if (enterTxt.createNewFile()) {
                System.out.println("File enter.txt berhasil dibuat.");
            } else {
                System.out.println("File enter.txt sudah ada.");
            }
            if (exitTxt.createNewFile()) {
                System.out.println("File exit.txt berhasil dibuat.");
            } else {
                System.out.println("File exit.txt sudah ada.");
            }

            System.out.println("Struktur file dan folder berhasil dibuat.");
        } catch (IOException e) {
            System.out.println("Terjadi kesalahan: " + e.getMessage());
        } }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    // End of variables declaration//GEN-END:variables

    private void pindahFile() {
          // Lokasi file dan folder
         // Memindahkan project.conf ke dalam folder template
        File newLocation = new File(template, "project.conf");
        if (projectConf.renameTo(newLocation)) {
            System.out.println("project.conf berhasil dipindahkan ke folder template.");
        } else {
            System.out.println("Gagal memindahkan project.conf.");
        }

        // Menghapus file Test.java
        if (testJava.delete()) {
            System.out.println("Test.java berhasil dihapus.");
        } else {
            System.out.println("Gagal menghapus Test.java.");
        }
    }

    private void hapusRoot() {
        if (root.delete()) {
            
            System.out.println("Test.java berhasil dihapus.");
        } else {
            System.out.println("Gagal menghapus Test.java.");
        }
    }
    
    
}
