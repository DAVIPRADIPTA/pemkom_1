/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Owner;

import java.time.LocalDate;
import javax.swing.JOptionPane;
import app.Koneksi;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author asus
 */
public class Product extends javax.swing.JPanel {

    /**
     * Creates new form Product
     */
    String produkTerlaris;
    int jumlahTerjual;
    double totalPenjualan;
    public Product() {
        initComponents();
        loadProdukTerjualBulanIni();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTableProdukTerjual = new javax.swing.JTable();
        tglSampai2 = new com.toedter.calendar.JDateChooser();
        tglDari2 = new com.toedter.calendar.JDateChooser();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        jTableProdukTerjual.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Nama Produk", "Jumlah Terjual", "Total Pendapatan"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTableProdukTerjual);

        jButton3.setText("view");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("refreh");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel4.setText("dari");

        jLabel5.setText("sampai");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("Penjualan Product");

        jLabel2.setForeground(new java.awt.Color(255, 0, 0));
        jLabel2.setText("Secara default menampilkan penjualan produk bulan ini");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tglDari2, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(tglSampai2, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(52, 52, 52)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton4)
                        .addGap(229, 229, 229))))
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 831, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(349, 349, 349)
                        .addComponent(jLabel1)))
                .addContainerGap(218, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(jLabel1)
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(tglDari2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tglSampai2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(110, 110, 110)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton3)
                            .addComponent(jButton4))))
                .addGap(28, 28, 28)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(587, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        loadProdukTerjualCustomPeriode();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        loadProdukTerjualBulanIni();
    }//GEN-LAST:event_jButton4ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableProdukTerjual;
    private com.toedter.calendar.JDateChooser tglDari2;
    private com.toedter.calendar.JDateChooser tglSampai2;
    // End of variables declaration//GEN-END:variables
    
    private void loadProdukTerjualCustomPeriode() {
        
        java.util.Date dateFrom = tglDari2.getDate();
        java.util.Date dateTo = tglSampai2.getDate();

        if (dateFrom == null || dateTo == null) {
            JOptionPane.showMessageDialog(this, "Harap pilih tanggal awal dan tanggal akhir!", "Peringatan", JOptionPane.WARNING_MESSAGE);
            return;
        }

        // Format tanggal ke bentuk SQL (yyyy-MM-dd)
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        String dariTanggal = sdf.format(dateFrom);
        String sampaiTanggal = sdf.format(dateTo);

        try {
            Connection conn = Koneksi.Go();

            String sql = "SELECT " +
                         "p.nama_produk AS nama_produk, " +
                         "SUM(d.jumlah_produk) AS jumlah_terjual, " +
                         "SUM(d.jumlah_produk * p.harga_jual) AS total_pendapatan " +
                         "FROM transaksi_detail d " +
                         "JOIN produk p ON d.id_produk = p.id_produk " +
                         "JOIN transaksi t ON d.id_transaksi = t.id_transaksi " +
                         "WHERE t.tanggal_transaksi >= ? AND t.tanggal_transaksi <= ? " +
                         "GROUP BY p.nama_produk " +
                         "ORDER BY jumlah_terjual DESC";

            PreparedStatement stmt = conn.prepareStatement(sql);
            stmt.setString(1, dariTanggal);
            stmt.setString(2, sampaiTanggal);

            ResultSet rs = stmt.executeQuery();

            DefaultTableModel model = (DefaultTableModel) jTableProdukTerjual.getModel();
            model.setRowCount(0); // Kosongkan tabel sebelum memuat data baru

            while (rs.next()) {

                String namaProduk = rs.getString("nama_produk");
                int jumlahTerjual = rs.getInt("jumlah_terjual");
                double totalPendapatan = rs.getDouble("total_pendapatan");
           
                

                model.addRow(new Object[]{namaProduk, jumlahTerjual, String.format("Rp %, .2f", totalPendapatan)});
            }
            System.out.println(dariTanggal);
            System.out.println(sampaiTanggal);
            System.out.println(sampaiTanggal);

            rs.close();
            stmt.close();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Gagal memuat data produk terjual!", "Error", JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
        }
}

    private void loadProdukTerjualBulanIni() {
   // Mengambil tanggal 1 bulan ini
    LocalDate now = LocalDate.now();
    LocalDate startOfMonth = now.withDayOfMonth(1); // Tanggal 1 bulan ini
    LocalDate today = now; // Hari ini

    // Format ke bentuk SQL (yyyy-MM-dd)
    String dariTanggal = startOfMonth.toString();
    String sampaiTanggal = today.toString();

    try {
        Connection conn = Koneksi.Go();

        String sql = "SELECT " +
                     "p.nama_produk AS nama_produk, " +
                     "SUM(d.jumlah_produk) AS jumlah_terjual, " +
                     "SUM(d.jumlah_produk * p.harga_jual) AS total_pendapatan " +
                     "FROM transaksi_detail d " +
                     "JOIN produk p ON d.id_produk = p.id_produk " +
                     "JOIN transaksi t ON d.id_transaksi = t.id_transaksi " +
                     "WHERE t.tanggal_transaksi >= ? AND t.tanggal_transaksi <= ? " +
                     "GROUP BY p.nama_produk " +
                     "ORDER BY jumlah_terjual DESC";

        PreparedStatement stmt = conn.prepareStatement(sql);
        stmt.setString(1, dariTanggal);
        stmt.setString(2, sampaiTanggal);

        ResultSet rs = stmt.executeQuery();

        DefaultTableModel model = (DefaultTableModel) jTableProdukTerjual.getModel();
        model.setRowCount(0); // Kosongkan tabel sebelum memuat data baru

        while (rs.next()) {
            String namaProduk = rs.getString("nama_produk");
            int jumlahTerjual = rs.getInt("jumlah_terjual");
            double totalPendapatan = rs.getDouble("total_pendapatan");

            model.addRow(new Object[]{namaProduk, jumlahTerjual,  String.format("Rp %, .2f", totalPendapatan)});
        }

        rs.close();
        stmt.close();
    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(this, "Gagal memuat data produk terjual (default)!", "Error", JOptionPane.ERROR_MESSAGE);
        ex.printStackTrace();
    }    }
}
