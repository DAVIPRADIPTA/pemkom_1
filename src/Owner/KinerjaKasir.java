/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Owner;

import app.Koneksi;
import java.awt.BorderLayout;
import java.awt.Dimension;
import java.util.HashMap;
import java.util.Map;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;

/**
 *
 * @author asus
 */
public class KinerjaKasir extends javax.swing.JPanel {

    /**
     * Creates new form KinerjaKasir
     */
    public KinerjaKasir() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        tglDari = new com.toedter.calendar.JDateChooser();
        tglSampai = new com.toedter.calendar.JDateChooser();
        btnLoadChart = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        panelChart = new javax.swing.JPanel();

        setLayout(new java.awt.BorderLayout());

        btnLoadChart.setText("view");
        btnLoadChart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoadChartActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("Kinerja Kasir");

        jLabel2.setText("Sampai");

        jLabel3.setText("Dari");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(294, 294, 294)
                        .addComponent(jLabel1))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(524, 524, 524)
                        .addComponent(btnLoadChart)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tglDari, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(34, 34, 34)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(tglSampai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(32, 32, 32))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnLoadChart))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 25, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(tglSampai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tglDari, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(23, 23, 23))
        );

        add(jPanel1, java.awt.BorderLayout.PAGE_START);

        javax.swing.GroupLayout panelChartLayout = new javax.swing.GroupLayout(panelChart);
        panelChart.setLayout(panelChartLayout);
        panelChartLayout.setHorizontalGroup(
            panelChartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 882, Short.MAX_VALUE)
        );
        panelChartLayout.setVerticalGroup(
            panelChartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 425, Short.MAX_VALUE)
        );

        add(panelChart, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void btnLoadChartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoadChartActionPerformed
            // TODO add your handling code here:
           SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");

    // Periode default
            Calendar calendar = Calendar.getInstance();
            calendar.set(Calendar.DAY_OF_MONTH, 1);
            String defaultDariTanggal = sdf.format(calendar.getTime());
            String defaultSampaiTanggal = sdf.format(new Date());

            // Ambil tanggal dari input
            String dariTanggal = (tglDari.getDate() != null) ? sdf.format(tglDari.getDate()) : defaultDariTanggal;
            String sampaiTanggal = (tglSampai.getDate() != null) ? sdf.format(tglSampai.getDate()) : defaultSampaiTanggal;

            // Tampilkan Bar Chart
            loadBarChart(panelChart, dariTanggal, sampaiTanggal);
        System.out.println("halooo");
    }//GEN-LAST:event_btnLoadChartActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLoadChart;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel panelChart;
    private com.toedter.calendar.JDateChooser tglDari;
    private com.toedter.calendar.JDateChooser tglSampai;
    // End of variables declaration//GEN-END:variables

    private void loadBarChart(JPanel panelChart, String dariTanggal, String sampaiTanggal) {
            try {
                // Buat koneksi ke database
                Connection conn = Koneksi.Go();

                // Query SQL untuk mendapatkan data kinerja kasir
                String sql = "SELECT p.nama_lengkap, SUM(d.jumlah_produk) AS jumlah_terjual " +
                             "FROM transaksi t " +
                             "JOIN transaksi_detail d ON t.id_transaksi = d.id_transaksi " +
                             "JOIN akun a ON t.id_akun = a.id_akun " +
                             "JOIN profil p ON a.id_akun = p.id_akun " +
                             "WHERE t.tanggal_transaksi >= ? AND t.tanggal_transaksi <= ? " +
                             "GROUP BY p.nama_lengkap";

                // Eksekusi query
                PreparedStatement stmt = conn.prepareStatement(sql);
                stmt.setString(1, dariTanggal);
                stmt.setString(2, sampaiTanggal);
                ResultSet rs = stmt.executeQuery();

                // Dataset untuk Bar Chart
                DefaultCategoryDataset dataset = new DefaultCategoryDataset();

                // Tambahkan data langsung ke dataset
                while (rs.next()) {
                    String namaKasir = rs.getString("nama_lengkap");
                    int jumlahTerjual = rs.getInt("jumlah_terjual");
                    dataset.addValue(jumlahTerjual, "Jumlah Terjual", namaKasir);
                }

                rs.close();
                stmt.close();

                // Buat Bar Chart
                JFreeChart barChart = ChartFactory.createBarChart(
                    "Kinerja Kasir",          // Judul Chart
                    "Kasir",                 // Label Kategori (X)
                    "Jumlah Produk Terjual", // Label Nilai (Y)
                    dataset,                 // Dataset
                    PlotOrientation.VERTICAL, // Orientasi Chart
                    false,                   // Legenda
                    true,                    // Tooltips
                    false                    // URL
                );

                // Tambahkan Chart ke Panel
                ChartPanel chartPanel = new ChartPanel(barChart);
                chartPanel.setPreferredSize(new Dimension(panelChart.getWidth(), panelChart.getHeight()));
                panelChart.removeAll();
                panelChart.setLayout(new BorderLayout());
                panelChart.add(chartPanel, BorderLayout.CENTER);
                panelChart.validate();

            } catch (SQLException e) {
                JOptionPane.showMessageDialog(panelChart, "Gagal memuat data kinerja kasir!", "Error", JOptionPane.ERROR_MESSAGE);
                e.printStackTrace();
            }
        }

//        btnLoadChart.addActionListener(e -> {
//            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
//
//            // Periode default (tanggal 1 hingga hari ini)
//            Calendar calendar = Calendar.getInstance();
//            calendar.set(Calendar.DAY_OF_MONTH, 1);
//            String defaultDariTanggal = sdf.format(calendar.getTime());
//            String defaultSampaiTanggal = sdf.format(new Date());
//
//            // Ambil tanggal dari input
//            String dariTanggal = (tglDari.getDate() != null) ? sdf.format(tglDari.getDate()) : defaultDariTanggal;
//            String sampaiTanggal = (tglSampai.getDate() != null) ? sdf.format(tglSampai.getDate()) : defaultSampaiTanggal;
//
//            // Tampilkan Bar Chart
//            loadBarChart(panelChart, dariTanggal, sampaiTanggal);
//        });


}
