/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Admin;

import app.Koneksi;
import javax.swing.table.DefaultTableModel;
import java.sql.Connection;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import java.sql.PreparedStatement;
import java.sql.Statement;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;

/**
 *
 * @author asus
 */
public class PenjualanPerkasir extends javax.swing.JPanel {

    /**
     * Creates new form PenjualanPerkasir
     */
    public PenjualanPerkasir() {
        initComponents();
        loadPenjualanBulanIni();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        blnDari = new com.toedter.calendar.JMonthChooser();
        blnSampai = new com.toedter.calendar.JMonthChooser();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jscrol = new javax.swing.JScrollPane();
        jTablePenjualanPerKasir = new javax.swing.JTable();

        setLayout(new java.awt.BorderLayout());

        jLabel1.setText("Dari");

        jLabel2.setText("Sampai");

        jButton1.setText("View");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("refresh");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(95, 95, 95)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(blnDari, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(blnSampai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1)
                        .addGap(137, 137, 137)
                        .addComponent(jButton2))
                    .addComponent(jLabel2))
                .addContainerGap(174, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(blnSampai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(blnDari, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton1)
                        .addComponent(jButton2)))
                .addGap(22, 22, 22))
        );

        add(jPanel1, java.awt.BorderLayout.PAGE_START);

        jTablePenjualanPerKasir.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "No", "Nama Kasir", "Total Transaksi", "Total Penjulan", "Jumlah Produk Terjual", "Rata-rata Penjulan Per Transaksi", "Produk Terlaris", "Jumlah Produk Terlaris"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jscrol.setViewportView(jTablePenjualanPerKasir);

        add(jscrol, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        loadPenjualanBulanIni();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        loadPenjualanCustomInterval();
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JMonthChooser blnDari;
    private com.toedter.calendar.JMonthChooser blnSampai;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTable jTablePenjualanPerKasir;
    private javax.swing.JScrollPane jscrol;
    // End of variables declaration//GEN-END:variables
    private void loadPenjualanBulanIni() {
    DefaultTableModel model = (DefaultTableModel) jTablePenjualanPerKasir.getModel();
    model.setRowCount(0);

    try {
        Connection conn = Koneksi.Go();

        // Ambil tanggal awal dan akhir bulan ini
        int bulanSekarang = java.time.LocalDate.now().getMonthValue();
        int tahunSekarang = java.time.LocalDate.now().getYear();
        String tanggalAwal = String.format("%04d-%02d-01", tahunSekarang, bulanSekarang);
        String tanggalAkhir = String.format("%04d-%02d-01", tahunSekarang, bulanSekarang + 1);

        // Jika bulan adalah Desember, tanggal akhir menjadi Januari tahun berikutnya
        if (bulanSekarang == 12) {
            tanggalAkhir = String.format("%04d-01-01", tahunSekarang + 1);
        }

        tampilkanData(conn, tanggalAwal, tanggalAkhir);
    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(this, "Gagal memuat data penjualan bulan ini!", "Error", JOptionPane.ERROR_MESSAGE);
        ex.printStackTrace();
    }
}
    // Fungsi untuk menampilkan data custom interval
private void loadPenjualanCustomInterval() {
    DefaultTableModel model = (DefaultTableModel) jTablePenjualanPerKasir.getModel();
    model.setRowCount(0);

    try {
        Connection conn = Koneksi.Go();

        // Ambil tanggal dari JMonthChooser
        int bulanDari = blnDari.getMonth() + 1;
        int bulanSampai = blnSampai.getMonth() + 1;
        int tahunSekarang = java.time.LocalDate.now().getYear();

        String tanggalAwal = String.format("%04d-%02d-01", tahunSekarang, bulanDari);
        String tanggalAkhir = String.format("%04d-%02d-01", tahunSekarang, bulanSampai + 1);

        // Jika bulan sampai adalah Desember, tanggal akhir menjadi Januari tahun berikutnya
        if (bulanSampai == 12) {
            tanggalAkhir = String.format("%04d-01-01", tahunSekarang + 1);
        }

        tampilkanData(conn, tanggalAwal, tanggalAkhir);
    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(this, "Gagal memuat data custom interval!", "Error", JOptionPane.ERROR_MESSAGE);
        ex.printStackTrace();
    }
}
    // Fungsi untuk menampilkan data berdasarkan tanggal awal dan akhir
private void tampilkanData(Connection conn, String tanggalAwal, String tanggalAkhir) throws SQLException {
    String sql = "SELECT " +
                 "ROW_NUMBER() OVER (ORDER BY SUM(d.jumlah_produk * p.harga_jual) DESC) AS no, " +
                 "pr.nama_lengkap AS nama_kasir, " +
                 "COUNT(DISTINCT t.id_transaksi) AS jumlah_transaksi, " +
                 "SUM(d.jumlah_produk * p.harga_jual) AS total_penjualan, " +
                 "SUM(d.jumlah_produk) AS jumlah_produk_terjual, " +
                 "AVG(d.jumlah_produk * p.harga_jual) AS rata_rata_per_transaksi, " +
                 "(SELECT p2.nama_produk " +
                 " FROM transaksi_detail d2 " +
                 " JOIN produk p2 ON d2.id_produk = p2.id_produk " +
                 " WHERE d2.id_transaksi IN ( " +
                 "   SELECT t2.id_transaksi " +
                 "   FROM transaksi t2 " +
                 "   WHERE t2.id_akun = t.id_akun " +
                 " ) " +
                 " GROUP BY p2.nama_produk " +
                 " ORDER BY SUM(d2.jumlah_produk) DESC " +
                 " LIMIT 1) AS produk_terlaris, " +
                 "(SELECT MAX(jumlah_produk_terjual) " +
                 " FROM ( " +
                 "   SELECT SUM(d3.jumlah_produk) AS jumlah_produk_terjual " +
                 "   FROM transaksi_detail d3 " +
                 "   WHERE d3.id_transaksi IN ( " +
                 "     SELECT t3.id_transaksi " +
                 "     FROM transaksi t3 " +
                 "     WHERE t3.id_akun = t.id_akun " +
                 "   ) " +
                 "   GROUP BY d3.id_produk " +
                 " ) AS subquery) AS jumlah_produk_terlaris " +
                 "FROM transaksi t " +
                 "JOIN transaksi_detail d ON t.id_transaksi = d.id_transaksi " +
                 "JOIN produk p ON d.id_produk = p.id_produk " +
                 "JOIN akun a ON t.id_akun = a.id_akun " +
                 "JOIN profil pr ON a.id_akun = pr.id_akun " +
                 "WHERE t.tanggal_transaksi >= ? AND t.tanggal_transaksi < ? " +
                 "GROUP BY pr.nama_lengkap, t.id_akun " +  // Menambahkan t.id_akun di GROUP BY
                 "ORDER BY total_penjualan DESC";

    PreparedStatement stmt = conn.prepareStatement(sql);
    stmt.setString(1, tanggalAwal);
    stmt.setString(2, tanggalAkhir);

    ResultSet rs = stmt.executeQuery();

    DefaultTableModel model = (DefaultTableModel) jTablePenjualanPerKasir.getModel();
    while (rs.next()) {
        int no = rs.getInt("no");
        String namaKasir = rs.getString("nama_kasir");
        int jumlahTransaksi = rs.getInt("jumlah_transaksi");
        int totalPenjualan = rs.getInt("total_penjualan");
        int jumlahProdukTerjual = rs.getInt("jumlah_produk_terjual");
        double rataRataPerTransaksi = rs.getDouble("rata_rata_per_transaksi");
        String produkTerlaris = rs.getString("produk_terlaris");
        int jumlahProdukTerlaris = rs.getInt("jumlah_produk_terlaris");

        model.addRow(new Object[]{
            no, namaKasir, jumlahTransaksi, totalPenjualan, jumlahProdukTerjual,
            rataRataPerTransaksi, produkTerlaris, jumlahProdukTerlaris
        });
    }

    rs.close();
    stmt.close();
}





}


